
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // App settings - e.g., active match ID
    // For production, write should be restricted to specific admin/control panel users.
    match /app_settings/{settingId} {
      allow read: if true; // Allow all clients to read app settings (e.g., active match ID)
      allow write: if request.auth != null; // Only authenticated users (e.g., admin panel) can change settings
    }

    // Schedules for Tanding matches
    // Created and managed by Admin. Read by login page and scoring panels.
    match /schedules_tanding/{scheduleId} {
      // For production, write should be restricted to admins, e.g., request.auth.token.isAdmin == true
      allow read, write: if request.auth != null;
    }

    // Schedules for TGR matches
    // Created and managed by Admin. Read by login page and scoring panels.
    match /schedules_tgr/{scheduleId} {
      // For production, write should be restricted to admins, e.g., request.auth.token.isAdmin == true
      allow read, write: if request.auth != null;
    }

    // Live match data for Tanding
    match /matches_tanding/{matchId} {
      // Timer status, overall scores, etc.
      // Allow read by all authenticated users (juri, dewan, ketua, monitor)
      // Allow write only by Dewan Kontrol (Dewan 1)
      // For production, this write rule needs to be more specific, e.g., based on a custom claim or role.
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Dewan 1 updates timer and logs

      // Juri scores for Tanding
      match /juri_scores/{juriId} {
        // Each Juri writes to their own document. Dewan Kontrol reads all.
        // For production, write should be restricted to specific juriId, e.g., request.auth.uid == juriId
        allow read, write: if request.auth != null;
      }

      // Official actions by Ketua Pertandingan for Tanding
      match /official_actions/{actionId} {
        // Ketua Pertandingan writes. Dewan Kontrol reads.
        // For production, write should be restricted to Ketua Pertandingan role.
        allow read, write: if request.auth != null;
      }

      // Verification requests for Tanding
      match /verifications/{verificationId} {
        // Ketua Pertandingan creates. Juri update their votes. Dewan Kontrol reads.
        // For production, rules need to be granular for create, update (own vote), read.
        allow read, write: if request.auth != null;
      }
    }

    // Live match data for TGR
    match /matches_tgr/{matchId} {
      // Timer status, etc.
      // Allow read by all authenticated users (juri, dewan, ketua, monitor)
      // Allow write only by Dewan Kontrol (Dewan 1 TGR)
      // For production, this write rule needs to be more specific.
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Dewan 1 TGR updates timer and dewan penalties

      // Juri scores for TGR
      match /juri_scores_tgr/{juriId} {
        // Each Juri TGR writes to their own document. Ketua TGR reads all.
        // For production, write should be restricted to specific juriId.
        allow read, write: if request.auth != null;
      }

      // Dewan penalties for TGR
      match /dewan_penalties_tgr/{penaltyId} {
        // Dewan TGR writes. Ketua TGR reads.
        // For production, write should be restricted to Dewan TGR role.
        allow read, write: if request.auth != null;
      }
    }
  }
}
