
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // App Settings (e.g., active match IDs)
    // Admin typically sets this. For production, you'd check for an admin role.
    match /app_settings/{settingId} {
      allow read, write: if request.auth != null; // Placeholder: replace with admin check for write
    }

    // Schedules - Created and managed by Admin
    // For production, write access should be restricted to users with an admin role.
    // Example: allow write: if request.auth != null && request.auth.token.isAdmin == true;
    match /schedules_tanding/{scheduleId} {
      allow read: if request.auth != null; // Allow authenticated users to read schedules
      allow write: if request.auth != null; // Placeholder for development: allows any authenticated user to write.
                                        // For production, use: if request.auth != null && request.auth.token.isAdmin == true;
    }
    match /schedules_tgr/{scheduleId} {
      allow read: if request.auth != null;   // Allow authenticated users to read schedules
      allow write: if request.auth != null; // Placeholder for development: allows any authenticated user to write.
                                        // For production, use: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // Live Match Data for Tanding
    match /matches_tanding/{matchId} {
      allow read, write: if request.auth != null; // Dewan controls timer, logs
      // Juri scores for Tanding
      match /juri_scores/{juriId} {
        // For production, ensure juriId in path matches request.auth.uid or a specific claim
        allow read, write: if request.auth != null; 
      }
      // Official actions by Ketua Pertandingan for Tanding
      match /official_actions/{actionId} {
        // For production, ensure only Ketua Pertandingan can write
        allow read, write: if request.auth != null;
      }
      // Verification requests for Tanding
      match /verifications/{verificationId} {
        // For production, refine who can read/write based on roles (Ketua creates, Juri updates votes)
        allow read, write: if request.auth != null; 
      }
    }

    // Live Match Data for TGR
    match /matches_tgr/{matchId} {
      allow read, write: if request.auth != null; // Dewan controls timer
      // Juri scores for TGR
      match /juri_scores_tgr/{juriId} {
        // For production, ensure juriId in path matches request.auth.uid or a specific claim
        allow read, write: if request.auth != null; 
      }
      // Dewan penalties for TGR
      match /dewan_penalties_tgr/{penaltyId} {
        // For production, ensure only Dewan can write
        allow read, write: if request.auth != null; 
      }
    }
  }
}
